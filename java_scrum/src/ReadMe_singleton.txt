单例模式有以下特点：
　　1、单例类只能有一个实例。
　　2、单例类必须自己创建自己的唯一实例。
　　3、单例类必须给所有其他对象提供这一实例。

懒汉式单例(Singleton1.java):线程不安全，延迟加载
	懒汉式单例改造使线程安全：
	△getInstance方法同步（Singleton2.java）:效率低
	△双重检查锁定（Singleton3.java）：相比方法同步，避免了每次都同步的性能损耗
	△静态内部类（Singleton4.java）：没有性能损耗，推荐使用

饿汉式单例(Singleton5.java):线程安全

枚举(Singleton6.java)：不仅能避免多线程同步问题，而且还能防止反序列化重新创建新的对象（JDK1.5以上）

一般推荐使用静态内部类和饿汉式单例。
优先使用饿汉式单例，如果有特別要求延迟加载，使用静态内部类方式。
如果涉及到反序列化创建对象时使用枚举的方式来实现单例。


作成日：2015/8/31