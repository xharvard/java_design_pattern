<!DOCTYPE html>
<html lang="zh"><head>
	<title>LOFTER（乐乎） - 每个人的理想国</title>
	<meta name="keywords" content="图片社交、照片社交、摄影作品、手机摄影、同人文、平面设计、cosplay、达人、女神图片、时尚搭配、二次元">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="x-ua-compatible" content="ie=emulateie7">
<meta name="author" content="netease">
<meta name="version" content="1.0">
<meta name="keywords" content="图片社交、照片社交、摄影作品、手机摄影、同人文、平面设计、cosplay、达人、女神图片、时尚搭配、二次元">
<meta name="description" content="">

  <script type="text/javascript">
   (function(window,document){
        
        document.uniqueID!=document.uniqueID&&!!location.hash&&(location.hash=location.hash);
        window.focus();
    })(this,document);
  </script>
<style type="text/css">
html,body{font-family:"Hiragino Sans GB","Microsoft YaHei","微软雅黑",tahoma,arial,simsun,"宋体";text-align:left;font-size:12px;line-height:normal;background-color:transparent;}
*{margin:0;padding:0;}
li{list-style:none;}
a{color:#666;text-decoration:none;}
img{border:0 none;}

.m-iframepostlist .type{background:url(/rsc/img/icon24.png?036) no-repeat 999px 999px;_background:url(/rsc/img/icon.png?036) no-repeat 999px 999px;}
.m-iframepostlist .first{background:url(/rsc/img/addinbanenr.png?001) no-repeat;}

.m-iframepostlist{height:125px;margin-right:-5px;}
.m-iframepostlist li{position:relative;float:left;width:125px;height:125px;margin:0 5px 10px 0;overflow:hidden;background:#ddd;}
.m-iframepostlist a{height:100%;}
.m-iframepostlist a,.m-iframepostlist img,.m-iframepostlist span,.m-iframepostlist strong{display:block;}
.m-iframepostlist .txt{padding:10px 10px 0;}
.m-iframepostlist .txt strong{max-height:42px;_height:21px;margin:0 0 8px;overflow:hidden;font-size:16px;}
.m-iframepostlist .txt span{max-height:69px;overflow:hidden;line-height:23px;}
.m-iframepostlist .type{position:absolute;top:50%;left:50%;width:57px;height:57px;margin:-28px 0 0 -28px;_width:52px;_height:52px;_margin:-26px 0 0 -26px;filter:alpha(opacity=90);}
.m-iframepostlist .movie .type{background-position:0 -2180px;*background-position:0 -2300px;}
.m-iframepostlist .music .type{background-position:0 -2240px;*background-position:0 -2358px;}
.m-iframepostlist .first{text-indent:-999px;overflow:hidden;}
.m-iframepostlist .first-1{background-position:0 0;}
.m-iframepostlist .first-2{background-position:-131px 0;}
.m-iframepostlist .first-3{background-position:-262px 0;}
.m-iframepostlist .first-4{background-position:-393px 0;}
.m-iframepostlist .first-5{background-position:-524px 0;}

.m-iframepostlist .imgwrap{position:absolute;top:50%;}
.m-iframepostlist .imgwrap img{width:125px;}
.m-iframepostlist .imgwrap2{position:relative;}
.m-iframepostlist .firstimg{visibility:hidden;}
.m-iframepostlist .lastimg{position:absolute;top:-50%;}

/*  LOFTER-19450:博客更多文章模块样式更换  */
.m-iframepostlist .blogfirst{text-indent:-999px;overflow:hidden;background:url(/rsc/img/blogfirst.png?001) 0 0 no-repeat;}
</style>
</head>

<body>

<div class="m-iframepostlist">
	<ul class="list" id="ullist">
		<li class="blogfirst" id="joinLink">
			<a target="_blank" id="joinLofterLink" href="http://www.lofter.com/?act=qbpersonalpagelogin_20141014_01">加入LOFTER</a>
		</li>
	<li class="text"><a target="_blank" href="http://joe5456536.lofter.com/post/1d10c785_75b1526"><span class="txt"><strong>ActiveMQ样例-Topic</strong><span>Publisher.java
 public class Publisher { private String channel = topic.message; 
private String uri = 
failover:(tcp://192.168.0.13:61616,tcp://192.168.0.14:61616); private 
static final Publisher publisher = new Publisher(); private 
MessageProducer messageProducer = null; private...</span></span></a></li><li class="text"><a target="_blank" href="http://joe5456536.lofter.com/post/1d10c785_69f19fe"><span class="txt"><strong>Zookeeper WINDOWS 安装配置</strong><span>下
载：zookeeper:http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.4.6/
 zookeeper-3.4.6.tar.gz 解压 zookeeper-3.4.6.tar.gz 一、单机配置 
把zookeeper-3.4.6/conf/zoo_sample.cfg修改为zoo.cfg zoo.cfg内容： tickTime=2000 
//Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔 initLimit=5 
//zookeeper集群中的包含多台server...</span></span></a></li><li class="text"><a target="_blank" href="http://joe5456536.lofter.com/post/1d10c785_6063db6"><span class="txt"><strong>构建高性能的WEB站点</strong><span>WEB
服务器本身的优化 网络分层 应用层 表示层 会话层 运输层 网络层 数据链路层 物理层 进程 
进程的调度是由内核来进行。目的是担当分配系统资源的实体。 每个进程都有自己独立的内存地址和生命周期。 进程有两种运行模式：用户态和内核态。 
上下文切换 
进程通常运行在用户态（比如数学计算），而当进程需要对硬件进行操作的时候（读磁盘、发送网络数据）就必须切换到内核态。当内核态的任务完成后，进程又回
到用户态。 线程 线程就是一个普通的进程 进程调度 任何时刻只有一个进程处于运行状态。而其他进程就处于挂起或就绪状态。 I/O模型 
根据设备的不同分为：内存I/O、...</span></span></a></li><li class="text"><a target="_blank" href="http://joe5456536.lofter.com/post/1d10c785_75ae562"><span class="txt"><strong>ActiveMQ样例</strong><span>Broker1（IP：192.168.0.13）
配置 ：broker xmlns=http://activemq.apache.org/schema/core 
brokerName=static-broker1 dataDirectory=${activemq.data} 
destinationPolicy ...</span></span></a></li><li class="text"><a target="_blank" href="http://joe5456536.lofter.com/post/1d10c785_6c04460"><span class="txt"><strong>Redis+Sentinel安装与配置</strong><span>在
这里我们搭建的是一个1主3从的redis+3个哨兵集群的环境，由于是在一台物理机上，所有我们用端口区分。 物理机IP：192.168.0.12 
主节点master端口：6301 从节点slave1端口：6315 从节点slave2端口：6316 从节点slave3端口：6317 
哨兵sentinel1端口：26301 哨兵sentinel2端口：26302 哨兵sentinel3端口：26303 一、下载安装 $ 
wget http://download.redis.io/releases/redis-3.0.0.tar.gz $ tar xzf 
redis-3.0.0...</span></span></a></li></ul>
</div>


<script>
var _postAry = [], _showPostAry = [], _post, _linode, _classname = ['text','img','music','movie'], _texthtml, _blogLink='http://joe5456536.lofter.com/';
_postAry.push({type:1, permalink:'1d10c785_69f2a4d',imgurl:'', title:'Dubbo基于Zookeeper实现分布式服务样例', content:'1、安装zookeeper 2、创建provider项目 ', noticeLinkTitle:'Dubbo基于Zookeepe...'});
_postAry.push({type:1, permalink:'1d10c785_75ae562',imgurl:'', title:'ActiveMQ样例', content:'Broker1（IP：192.168.0.13）配置 ：broker xmlns=http://activemq.apache.org/schema/core brokerName=static-broker1 dataDirectory=${activemq.data} destinationPolicy ...', noticeLinkTitle:'ActiveMQ样例'});
_postAry.push({type:1, permalink:'1d10c785_6c04460',imgurl:'', title:'Redis+Sentinel安装与配置', content:'在这里我们搭建的是一个1主3从的redis+3个哨兵集群的环境，由于是在一台物理机上，所有我们用端口区分。 物理机IP：192.168.0.12 主节点master端口：6301 从节点slave1端口：6315 从节点slave2端口：6316 从节点slave3端口：6317 哨兵sentinel1端口：26301 哨兵sentinel2端口：26302 哨兵sentinel3端口：26303 一、下载安装 $ wget http://download.redis.io/releases/redis-3.0.0.tar.gz $ tar xzf redis-3.0.0...', noticeLinkTitle:'Redis+Sentinel安...'});
_postAry.push({type:1, permalink:'1d10c785_75b1526',imgurl:'', title:'ActiveMQ样例-Topic', content:'Publisher.java public class Publisher { private String channel = topic.message; private String uri = failover:(tcp://192.168.0.13:61616,tcp://192.168.0.14:61616); private static final Publisher publisher = new Publisher(); private MessageProducer messageProducer = null; private...', noticeLinkTitle:'ActiveMQ样例-Topi...'});
_postAry.push({type:1, permalink:'1d10c785_80a56a9',imgurl:'', title:'分布式系统中的幂等性', content:'理解HTTP幂等性 基于HTTP协议的Web API是时下最为流行的一种分布式服务提供方式。无论是在大型互联网应用还是企业级架构中，我们都见到了越来越多的SOA或RESTful的Web API。为什么Web API如此流行呢？我认为很大程度上应归功于简单有效的HTTP协议。HTTP协议是一种分布式的面向资源的网络应用层协议，无论是服务器端提供Web服务，还是客户端消费Web服务都非常简单。再加上浏览器、Javascript、AJAX、JSON以及HTML5等技术和工具的发展，互联网应用架构设计表现出了从传统的PHP、JSP、ASP.NET等服务器端动态网页向Web API + RIA（富互联...', noticeLinkTitle:'分布式系统中的幂等性'});
_postAry.push({type:1, permalink:'1d10c785_6063db6',imgurl:'', title:'构建高性能的WEB站点', content:'WEB服务器本身的优化 网络分层 应用层 表示层 会话层 运输层 网络层 数据链路层 物理层 进程 进程的调度是由内核来进行。目的是担当分配系统资源的实体。 每个进程都有自己独立的内存地址和生命周期。 进程有两种运行模式：用户态和内核态。 上下文切换 进程通常运行在用户态（比如数学计算），而当进程需要对硬件进行操作的时候（读磁盘、发送网络数据）就必须切换到内核态。当内核态的任务完成后，进程又回到用户态。 线程 线程就是一个普通的进程 进程调度 任何时刻只有一个进程处于运行状态。而其他进程就处于挂起或就绪状态。 I/O模型 根据设备的不同分为：内存I/O、...', noticeLinkTitle:'构建高性能的WEB站点'});
_postAry.push({type:1, permalink:'1d10c785_66c02cb',imgurl:'', title:'Spring JTA 分布式事务', content:' 当我们在应用中经常会遇到同时操作两个或多个数据库的情况，他们之间的事务怎么管理？Spring 提供了JTA分布式事务来实现该功能。 可以使用第三方插件比如 JOTM和 Atomiko，这两种插件可以和Spring 整合实现JTA分布式事务功能。并且可以脱离WEB服务器。 Spring也实现了和BEA Weblogic、IBM WebSphere等服务器整合共同实现JTA分布式事务。 一、Spring和Atomiko整合实现JTA功能 !-- 数据源1 -- bean id=ds1...', noticeLinkTitle:'Spring JTA 分布式事...'});
_postAry.push({type:1, permalink:'1d10c785_69f19fe',imgurl:'', title:'Zookeeper WINDOWS 安装配置', content:'下载：zookeeper:http://mirrors.hust.edu.cn/apache/zookeeper/zookeeper-3.4.6/ zookeeper-3.4.6.tar.gz 解压 zookeeper-3.4.6.tar.gz 一、单机配置 把zookeeper-3.4.6/conf/zoo_sample.cfg修改为zoo.cfg zoo.cfg内容： tickTime=2000 //Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔 initLimit=5 //zookeeper集群中的包含多台server...', noticeLinkTitle:'Zookeeper WINDO...'});

if(_postAry.length >5) {
for(var i=0;i<5;i++) {
var _length = _postAry.length, _index = Math.floor(Math.random()*_length);
_showPostAry.push(_postAry[_index]);
_postAry.splice(_index,1);
}
} else {
_showPostAry = _postAry;
}

for(var i=0,l=_showPostAry.length; i<l; i++) {
_post = _showPostAry[i];
_type = _post.type;
_linode = document.createElement('li');
_linode.className = _classname[_post.type-1];
_anode = document.createElement('a');
_anode.href = _blogLink+'post/'+_post.permalink;
_anode.target = '_blank';
_anode.onclick = function(){
try{
var _img = new Image();
_img.src = 'http://www.lofter.com/statistic.png?act=qbbkgdwz_20141022_01&t=' + new Date().getTime();
}catch(e){}
};

if(_type === 1) {
_texthtml = '<span class="txt"><strong>'+ _post.title +'</strong><span>'+ _post.content +'</span></span>'
} else {
if(!!_post.imgurl) {
if(_type === 2) {
_texthtml = '<span class="imgwrap"><span class="imgwrap2"><img class="firstimg" src="'+_post.imgurl+'" alt="'+_post.noticeLinkTitle+'"/><img class="lastimg" src="'+_post.imgurl+'" alt="'+_post.noticeLinkTitle+'"/></span></span>';
} else if(_type === 3) {
_texthtml = '<span class="imgwrap"><span class="imgwrap2"><img class="firstimg" src="http://imgsize.ph.126.net/?imgurl='+_post.imgurl+'_125x125x0.jpg"/><img class="lastimg" src="http://imgsize.ph.126.net/?imgurl='+_post.imgurl+'_125x125x0.jpg"/></span></span>';
} else if(_type === 4) {
_texthtml = '<span class="imgwrap"><span class="imgwrap2"><img class="firstimg" src="'+_post.imgurl+'"/><img class="lastimg" src="'+_post.imgurl+'"/></span></span>';
}
}
_texthtml += '<span class="type"></span>';
}

_anode.innerHTML = _texthtml;
_linode.appendChild(_anode);
document.getElementById('ullist').appendChild(_linode);
}
</script>


</body></html>